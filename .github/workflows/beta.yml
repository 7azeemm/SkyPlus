name: Build Beta

on:
  push:
    branches:
      - master
  pull_request:

env:
  REF_NAME: ${{ github.ref_name }}
  PR_NUMBER: ${{ github.event.number }}
  PR_SHA: ${{ github.event.pull_request.head.sha }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Get Jar name
      - name: Set Jar Name
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            let buildType;
            let commitSha;
            buildType = "alpha";
            if (process.env.PR_NUMBER) {
              buildType += `-pr-${process.env.PR_NUMBER}`;
              commitSha = process.env.PR_SHA;
            } else {
              commitSha = process.env.GITHUB_SHA;
            }

            const fs = require("fs");
            let file = fs.readFileSync("./gradle.properties");
            file = file.toString().split("\n").map(e => e.trim().startsWith("mod_version") ? `${e}-${buildType}-${commitSha.substring(0, 7)}` : e).join("\n");
            fs.writeFileSync("./gradle.properties", file);

      # Step 3: Set up Java 23
      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: 23
          distribution: 'temurin'

      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew

      # Step 5: Build the project using Gradle
      - name: Build with Gradle
        run: ./gradlew build

      - name: Store reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: |
            **/build/reports/
            **/build/test-results/

      - name: Process artifacts
        uses: actions/github-script@v7
        id: name
        with:
          result-encoding: string
          script: |
            const fs = require("fs")
            return fs.readdirSync("build/libs/").filter(e => !e.endsWith("dev.jar") && !e.endsWith("sources.jar") && e.endsWith(".jar"))[0].replace(".jar", "");

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.name.outputs.result }}
          path: build/libs/